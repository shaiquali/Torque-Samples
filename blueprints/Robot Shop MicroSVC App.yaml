spec_version: 2
description: >
    A Sample eCommerce Micro-Service app (Stan's Robot Shop) 
    deployed on a K8S Cluster using Helm using an RDS DB and an S3 bucket
instructions:
  source:
    store: spec2_repo_blue
    path: instructions/Robot_Shop.md
inputs:
  Robot Shop App Version:
    type: string
    default: "0.4.3"
    description: "Version of the robotShop micorservices application"
  DB Engine Instance Size:
    type: string
    default: "small"
    description: "The instance type of the RDS instance. Small, medium, or large."
    allowed-values: ["small", "medium", "large"]
  DB Engine Version:
    type: string
    default: "8.0.32"
    description: "Version of RDS MySQL DB Engine. Default is 8.0.32"


# values that starts with '{' for liquid template must be encosed with quotes so YAML won't consider them as dict
outputs:
  Robot Shop Site:
    value: 'http://{{.grains.Robot_Shop_App_MicroServices.scripts.post-helm-install.outputs.frontend}}:8080'
    quick: true
  Robot Shop Site (Friendly DNS): 
    value: 'robotshop-{{ envid | downcase }}.torque-demo.click:8080'
    quick: true
  RDS MySQL DB Hostname:
    value: '{{ .grains.MySQL_RDS_DB.outputs.hostname }}'
    quick: false

grains:
  MySQL_RDS_DB:
    kind: terraform
    spec:
      source:
        store: spec2_repo_blue
        path: assets/terraform/aws/rds
      agent:
        name: eks
      inputs:
        - env_id: '{{ envid | downcase }}'
        - size: '{{ .inputs.["DB Engine Instance Size"] }}' 
        - allocated_storage: 20
        - db_name: demo_db
        - engine_version: '{{ .inputs.["DB Engine Version"] }}'
        - engine: MySQL
        - username: adminuser
        - region: eu-west-1
      outputs:
        - hostname
        - connection_string

  S3_Bucket__crossplane:
    kind: helm
    spec: 
      source:
        store: spec2_repo_blue
        path: assets/helm/s3__crossplane
      agent:
        name: eks
      inputs:
        - AWSRegion: eu-west-1
        - BucketACL: private
        - BucketName: 'robotshop-s3-samples' 
        - EnvironmentID: '{{ envid | downcase }}'
      scripts:
        post-helm-install:
          source:
            store: spec2_repo_blue
            path:  assets/scripts/get-bucket-arn.sh
          arguments: 'robotshop-s3-samples-{{ envid | downcase }}'
          outputs:
            - bucket_arn

  Robot_Shop_App_MicroServices:
    kind: helm
    depends-on: MySQL_RDS_DB, S3_Bucket__crossplane
    spec:
      source:
        store: spec2_repo_blue
        path: assets/helm/robotShop
      agent:
        name: eks
      scripts:
        post-helm-install:
          source:
            store: spec2_repo_blue
            path:  assets/scripts/get-robot-web-address.sh
          arguments: '{{ envid | downcase }}'
          outputs:
            - frontend
      inputs:
        - hostname: 'robotshop-{{ envid | downcase }}'
        - domain: 'torque-demo.click'
        - version: '{{ .inputs.["Robot Shop App Version"] }}'
        - connectionString: '{{ .grains.MySQL_RDS_DB.outputs.connection_string }}'
        - objectStore.S3_BucketArn: '{{.grains.S3_Bucket__crossplane.scripts.post-helm-install.outputs.bucket_arn}}'
        - redis.storageClassName: gp3
        - EnvironmentID: '{{ envid | downcase }}'
